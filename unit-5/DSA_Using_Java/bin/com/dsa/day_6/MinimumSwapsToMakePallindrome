Minimum Swaps to Make Pallindrome 
=================================

Description

You are given a string A, of length N.

You have to find the minimum number of adjacent swaps required to make the string palindrome.

If it is impossible, return -1.


Input
The first line of the input contains T, the number of test cases.

The next line of the input contains N, the length of the string.

The next line contains the string A itself.

Constraints

1 <= T <= 10

1 <= N <= 1000


Output
For each test case, print a single integer denoting the number of adjacent swaps required to make the string palindrome, on a new line.


Sample Input 1 

2
5
aabcb
8
adbcdbad 
Sample Output 1

3
-1
Hint

In the first sample test case, the given string is A = "aabcb".

After the first swap, the string becomes -> "abacb".

After the second swap, the string becomes -> "abcab"

After the third swap, the string becomes -> "abcba", which is a palindrome.

So, in 3 adjacent swaps, the string became a palindrome, so the required output is 3.

In the second sample test case, the string cannot be made a palindrome, so the output is -1.